{"version":3,"sources":["redux/shop/shop.actions.js","views/shopPage/shoppage.component.jsx"],"names":["fetchCollectionsStartAsync","dispatch","collectionRef","firestore","collection","type","ShopActionTypes","FETCH_COLLECTIONS_START","get","then","snapshot","collectionMap","collectionsMap","convertCollectionsSnapshotToMap","FETCH_COLLECTIONS_SUCCESS","payload","catch","error","FETCH_COLLECTIONS_FAILURE","fetchCollectionsFailure","message","CollectionOverviewContainer","lazy","CollectionPageContainer","connect","match","useEffect","className","fallback","exact","path","component"],"mappings":"8KAsBaA,EAA6B,WACxC,OAAO,SAACC,GACN,IAAMC,EAAgBC,IAAUC,WAAW,eAC3CH,EAlBwC,CAC1CI,KAAMC,IAAgBC,0BAmBpBL,EACGM,MACAC,MAAK,SAACC,GACL,IAnBgCC,EAmB1BC,EAAiBC,YAAgCH,GACvDT,GApBgCU,EAoBCC,EApBkB,CACzDP,KAAMC,IAAgBQ,0BACtBC,QAASJ,QAoBJK,OAAM,SAACC,GAAD,OAAWhB,EAjBe,SAACgB,GAAD,MAAY,CACjDZ,KAAMC,IAAgBY,0BACtBH,QAASE,GAesBE,CAAwBF,EAAMG,e,QCzBzDC,EAA8BC,gBAAK,kBACvC,iCAEIC,EAA0BD,gBAAK,kBACnC,iCA6BaE,sBAAQ,MAJI,SAACvB,GAAD,MAAe,CACxCD,2BAA4B,kBAAMC,EAASD,SAG9BwB,EA1BE,SAAC,GAA2C,IAAzCxB,EAAwC,EAAxCA,2BAA4ByB,EAAY,EAAZA,MAK9C,OAJAC,qBAAU,WACR1B,MACC,CAACA,IAGF,yBAAK2B,UAAU,aACb,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAClB,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAI,UAAKL,EAAMK,MACfC,UAAWV,IAEb,kBAAC,IAAD,CACES,KAAI,UAAKL,EAAMK,KAAX,kBACJC,UAAWR","file":"static/js/10.d2a4a0e5.chunk.js","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionMap) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (error) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// now its possible due to the redux-thunk middeelware to dispatch actions inside actions (y) because of the dispatch parametre that it provides .\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n      })\r\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n  };\r\n};\r\n","import React, { useEffect, lazy, Suspense } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\n\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\n\r\nconst CollectionOverviewContainer = lazy(() =>\r\n  import(\"../../components/collections-overview/collections-overview.container\")\r\n);\r\nconst CollectionPageContainer = lazy(() =>\r\n  import(\"../collectionPage/collectionPage.container\")\r\n);\r\n\r\nconst ShopPage = ({ fetchCollectionsStartAsync, match }) => {\r\n  useEffect(() => {\r\n    fetchCollectionsStartAsync();\r\n  }, [fetchCollectionsStartAsync]);\r\n\r\n  return (\r\n    <div className=\"shop-page\">\r\n      <Suspense fallback={<Spinner />}>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          component={CollectionOverviewContainer}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPageContainer}\r\n        />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"],"sourceRoot":""}