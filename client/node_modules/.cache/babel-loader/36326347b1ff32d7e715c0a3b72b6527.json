{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\tuto\\\\E-Com Store\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Logo from \"../../assets/images/YousfitnessLogo.png\";\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_9OfuS4gpdp4WRIgXDMroIPo2\";\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }; // token for payment processing (backend work needed) we dont need it here for now, this fct is here to show that the payment was successful (or not)\n\n\n  const onToken = token => {\n    console.log(token);\n    return /*#__PURE__*/React.createElement(Snackbar, {\n      open: open,\n      autoHideDuration: 2000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: handleClose,\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"This is a success message!\"));\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"\\uD83D\\uDC49\\uD83C\\uDFFC Pay Now \\uD83D\\uDCB3\",\n    name: \"Y-H Clothing\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: Logo,\n    description: `Your Total is : $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default StripeCheckoutButton;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/tuto/E-Com Store/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","Snackbar","Alert","Logo","StripeCheckoutButton","price","priceForStripe","publishableKey","open","setOpen","useState","handleClose","event","reason","onToken","token","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAOC,IAAP,MAAiB,yCAAjB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,kCAAvB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND,CAN0C,CAc1C;;;AACA,QAAMK,OAAO,GAAIC,KAAD,IAAW;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,wBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEP,IAAhB;AAAsB,MAAA,gBAAgB,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEG,WAAhB;AAA6B,MAAA,QAAQ,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF;AAOD,GATD;;AAWA,sBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,+CADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAER,IALT;AAME,IAAA,WAAW,EAAG,oBAAmBE,KAAM,EANzC;AAOE,IAAA,MAAM,EAAEC,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEQ,OATT;AAUE,IAAA,SAAS,EAAEP,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAxCD;;AA0CA,eAAeH,oBAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport Logo from \"../../assets/images/YousfitnessLogo.png\";\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = \"pk_test_9OfuS4gpdp4WRIgXDMroIPo2\";\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  // token for payment processing (backend work needed) we dont need it here for now, this fct is here to show that the payment was successful (or not)\r\n  const onToken = (token) => {\r\n    console.log(token);\r\n    return (\r\n      <Snackbar open={open} autoHideDuration={2000}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StripeCheckout\r\n      label=\"👉🏼 Pay Now 💳\"\r\n      name=\"Y-H Clothing\"\r\n      billingAddress\r\n      shippingAddress\r\n      image={Logo}\r\n      description={`Your Total is : $${price}`}\r\n      amount={priceForStripe}\r\n      panelLabel=\"Pay Now\"\r\n      token={onToken}\r\n      stripeKey={publishableKey}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StripeCheckoutButton;\r\n"]},"metadata":{},"sourceType":"module"}