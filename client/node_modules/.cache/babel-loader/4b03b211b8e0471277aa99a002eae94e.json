{"ast":null,"code":"import{createSelector}from\"reselect\";import memoize from\"lodash.memoize\";var shopSelector=function shopSelector(state){return state.shop;};export var selectShopCollections=createSelector([shopSelector],function(shop){return shop.collections;});// same as last selector. Purpose : turn the object into an array to be iterable by .map function in the preview component.\nexport var selectCollectionsForPreview=createSelector([selectShopCollections],function(collections){return collections?Object.keys(collections).map(function(key){return collections[key];}):[];});export var selectCollection=memoize(function(CollectionUrlParam){return createSelector([selectShopCollections],function(collections){return collections?collections[CollectionUrlParam]:null;});});// new selector after the redux-thunk implementation\nexport var selectIsCollectionFetching=createSelector([shopSelector],function(shop){return shop.isFetching;});export var isCollectionsLoaded=createSelector([shopSelector],function(shop){return!!shop.collections;});","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/tuto/E-Com Store/client/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","shopSelector","state","shop","selectShopCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","CollectionUrlParam","selectIsCollectionFetching","isFetching","isCollectionsLoaded"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAArB,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAGL,cAAc,CACjD,CAACE,YAAD,CADiD,CAEjD,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACE,WAAf,EAFiD,CAA5C,CAKP;AACA,MAAO,IAAMC,CAAAA,2BAA2B,CAAGP,cAAc,CACvD,CAACK,qBAAD,CADuD,CAEvD,SAACC,WAAD,QACEA,CAAAA,WAAW,CAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B,SAACC,GAAD,QAASL,CAAAA,WAAW,CAACK,GAAD,CAApB,EAA7B,CAAH,CAA6D,EAD1E,EAFuD,CAAlD,CAMP,MAAO,IAAMC,CAAAA,gBAAgB,CAAGX,OAAO,CAAC,SAACY,kBAAD,QACtCb,CAAAA,cAAc,CAAC,CAACK,qBAAD,CAAD,CAA0B,SAACC,WAAD,QACtCA,CAAAA,WAAW,CAAGA,WAAW,CAACO,kBAAD,CAAd,CAAqC,IADV,EAA1B,CADwB,EAAD,CAAhC,CAMP;AACA,MAAO,IAAMC,CAAAA,0BAA0B,CAAGd,cAAc,CACtD,CAACE,YAAD,CADsD,CAEtD,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACW,UAAf,EAFsD,CAAjD,CAKP,MAAO,IAAMC,CAAAA,mBAAmB,CAAGhB,cAAc,CAC/C,CAACE,YAAD,CAD+C,CAE/C,SAACE,IAAD,QAAU,CAAC,CAACA,IAAI,CAACE,WAAjB,EAF+C,CAA1C","sourcesContent":["import { createSelector } from \"reselect\";\r\nimport memoize from \"lodash.memoize\";\r\n\r\nconst shopSelector = (state) => state.shop;\r\n\r\nexport const selectShopCollections = createSelector(\r\n  [shopSelector],\r\n  (shop) => shop.collections\r\n);\r\n\r\n// same as last selector. Purpose : turn the object into an array to be iterable by .map function in the preview component.\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectShopCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = memoize((CollectionUrlParam) =>\r\n  createSelector([selectShopCollections], (collections) =>\r\n    collections ? collections[CollectionUrlParam] : null\r\n  )\r\n);\r\n\r\n// new selector after the redux-thunk implementation\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [shopSelector],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const isCollectionsLoaded = createSelector(\r\n  [shopSelector],\r\n  (shop) => !!shop.collections\r\n);\r\n"]},"metadata":{},"sourceType":"module"}