{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{createStructuredSelector}from\"reselect\";import{ReactComponent as Logo}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/if.svg\";import CartIcon from\"../cart-icon/cart-icon.component\";import CartDropdown from\"../cart-dropdown/cart-dropdown.component\";import{selectCurrentUser}from\"../../redux/user/user.selectors\";import{selectCartHidden,selectCartItems}from\"../../redux/cart/cart.selectors\";import{auth}from\"../../firebase/firebase.utils.js\";import{HeaderContainer,LogoContainer,OptionsContainer,OptionLink,OptionDiv}from\"./header.styles\";var Header=function Header(_ref){var currentUser=_ref.currentUser,hidden=_ref.hidden,cartItems=_ref.cartItems;return/*#__PURE__*/React.createElement(HeaderContainer,null,/*#__PURE__*/React.createElement(LogoContainer,{to:\"/E-Com-Store\"},/*#__PURE__*/React.createElement(Logo,{className:\"logo\"})),/*#__PURE__*/React.createElement(OptionsContainer,null,/*#__PURE__*/React.createElement(OptionLink,{to:\"/shop\"},\"SHOP\"),/*#__PURE__*/React.createElement(OptionLink,{to:\"/contact\"},\"CONTACT\"),currentUser?/*#__PURE__*/React.createElement(OptionDiv,{onClick:function onClick(){return auth.signOut();}},\"SIGN OUT\"):/*#__PURE__*/React.createElement(OptionLink,{to:\"/sign-in\"},\"SIGN IN\"),/*#__PURE__*/React.createElement(CartIcon,null)),!hidden&&cartItems.length?/*#__PURE__*/React.createElement(CartDropdown,null):\"\");// the cart wont show unless they is at least 1 item there\n};var mapStateToProps=createStructuredSelector({currentUser:selectCurrentUser,hidden:selectCartHidden,cartItems:selectCartItems});export default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/tuto/E-Com Store/src/components/header/header.component.jsx"],"names":["React","connect","createStructuredSelector","CartIcon","CartDropdown","selectCurrentUser","selectCartHidden","selectCartItems","auth","HeaderContainer","LogoContainer","OptionsContainer","OptionLink","OptionDiv","Header","currentUser","hidden","cartItems","signOut","length","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,UAAzC,C,4FAIA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAEA,OAASC,iBAAT,KAAkC,iCAAlC,CACA,OACEC,gBADF,CAEEC,eAFF,KAGO,iCAHP,CAKA,OAASC,IAAT,KAAqB,kCAArB,CAEA,OACEC,eADF,CAEEC,aAFF,CAGEC,gBAHF,CAIEC,UAJF,CAKEC,SALF,KAMO,iBANP,CAQA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAwC,IAArCC,CAAAA,WAAqC,MAArCA,WAAqC,CAAxBC,MAAwB,MAAxBA,MAAwB,CAAhBC,SAAgB,MAAhBA,SAAgB,CACrD,mBACE,oBAAC,eAAD,mBACE,oBAAC,aAAD,EAAe,EAAE,CAAC,cAAlB,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,MAAhB,EADF,CADF,cAIE,oBAAC,gBAAD,mBACE,oBAAC,UAAD,EAAY,EAAE,CAAC,OAAf,SADF,cAEE,oBAAC,UAAD,EAAY,EAAE,CAAC,UAAf,YAFF,CAGGF,WAAW,cACV,oBAAC,SAAD,EAAW,OAAO,CAAE,yBAAMP,CAAAA,IAAI,CAACU,OAAL,EAAN,EAApB,aADU,cAGV,oBAAC,UAAD,EAAY,EAAE,CAAC,UAAf,YANJ,cAQE,oBAAC,QAAD,MARF,CAJF,CAcG,CAACF,MAAD,EAAWC,SAAS,CAACE,MAArB,cAA8B,oBAAC,YAAD,MAA9B,CAAiD,EAdpD,CADF,CAkBA;AACD,CApBD,CAsBA,GAAMC,CAAAA,eAAe,CAAGlB,wBAAwB,CAAC,CAC/Ca,WAAW,CAAEV,iBADkC,CAE/CW,MAAM,CAAEV,gBAFuC,CAG/CW,SAAS,CAAEV,eAHoC,CAAD,CAAhD,CAMA,cAAeN,CAAAA,OAAO,CAACmB,eAAD,CAAP,CAAyBN,MAAzB,CAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { ReactComponent as Logo } from \"../../assets/if.svg\";\r\n\r\nimport CartIcon from \"../cart-icon/cart-icon.component\";\r\nimport CartDropdown from \"../cart-dropdown/cart-dropdown.component\";\r\n\r\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\r\nimport {\r\n  selectCartHidden,\r\n  selectCartItems,\r\n} from \"../../redux/cart/cart.selectors\";\r\n\r\nimport { auth } from \"../../firebase/firebase.utils.js\";\r\n\r\nimport {\r\n  HeaderContainer,\r\n  LogoContainer,\r\n  OptionsContainer,\r\n  OptionLink,\r\n  OptionDiv,\r\n} from \"./header.styles\";\r\n\r\nconst Header = ({ currentUser, hidden, cartItems }) => {\r\n  return (\r\n    <HeaderContainer>\r\n      <LogoContainer to=\"/E-Com-Store\">\r\n        <Logo className=\"logo\" />\r\n      </LogoContainer>\r\n      <OptionsContainer>\r\n        <OptionLink to=\"/shop\">SHOP</OptionLink>\r\n        <OptionLink to=\"/contact\">CONTACT</OptionLink>\r\n        {currentUser ? (\r\n          <OptionDiv onClick={() => auth.signOut()}>SIGN OUT</OptionDiv>\r\n        ) : (\r\n          <OptionLink to=\"/sign-in\">SIGN IN</OptionLink>\r\n        )}\r\n        <CartIcon />\r\n      </OptionsContainer>\r\n      {!hidden && cartItems.length ? <CartDropdown /> : \"\"}\r\n    </HeaderContainer>\r\n  );\r\n  // the cart wont show unless they is at least 1 item there\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n  hidden: selectCartHidden,\r\n  cartItems: selectCartItems,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n"]},"metadata":{},"sourceType":"module"}