{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{withRouter}from\"react-router-dom\";import CustomButton from\"../custom-button/custom-button.component\";import CartItem from\"../cart-item/cart-item.component\";import{selectCartItems}from\"../../redux/cart/cart.selectors\";import{toggleCartHidden}from\"../../redux/cart/cart.actions\";import{createStructuredSelector}from\"reselect\";import\"./cart-dropdown.styles.sass\";var CartDropdown=function CartDropdown(_ref){var cartItems=_ref.cartItems,history=_ref.history,dispatch=_ref.dispatch,match=_ref.match;return/*#__PURE__*/React.createElement(\"div\",{className:\"cart-dropdown\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cart-items\"},cartItems.length?cartItems.map(function(item){return/*#__PURE__*/React.createElement(CartItem,{key:item.id,item:item});}):/*#__PURE__*/React.createElement(\"span\",{className:\"empty-cart\"},\"Your Cart Is Empty !\")),/*#__PURE__*/React.createElement(CustomButton,{onClick:function onClick(){history.push(\"\".concat(match.url,\"checkout\"));dispatch(toggleCartHidden());}},\"GO TO CHECKOUT\"));};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems});export default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/tuto/E-Com Store/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","createStructuredSelector","CartDropdown","cartItems","history","dispatch","match","length","map","item","id","push","url","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CAEA,OAASC,eAAT,KAAgC,iCAAhC,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CAEA,OAASC,wBAAT,KAAyC,UAAzC,CAEA,MAAO,6BAAP,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,OAAd,MAAcA,OAAd,CAAuBC,QAAvB,MAAuBA,QAAvB,CAAiCC,KAAjC,MAAiCA,KAAjC,oBACnB,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,YAAf,EACGH,SAAS,CAACI,MAAV,CACCJ,SAAS,CAACK,GAAV,CAAc,SAACC,IAAD,CAAU,CACtB,mBAAO,oBAAC,QAAD,EAAU,GAAG,CAAEA,IAAI,CAACC,EAApB,CAAwB,IAAI,CAAED,IAA9B,EAAP,CACD,CAFD,CADD,cAKC,4BAAM,SAAS,CAAC,YAAhB,yBANJ,CADF,cAUE,oBAAC,YAAD,EACE,OAAO,CAAE,kBAAM,CACbL,OAAO,CAACO,IAAR,WAAgBL,KAAK,CAACM,GAAtB,cACAP,QAAQ,CAACL,gBAAgB,EAAjB,CAAR,CACD,CAJH,mBAVF,CADmB,EAArB,CAsBA,GAAMa,CAAAA,eAAe,CAAGZ,wBAAwB,CAAC,CAC/CE,SAAS,CAAEJ,eADoC,CAAD,CAAhD,CAIA,cAAeH,CAAAA,UAAU,CAACD,OAAO,CAACkB,eAAD,CAAP,CAAyBX,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport CartItem from \"../cart-item/cart-item.component\";\r\n\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport \"./cart-dropdown.styles.sass\";\r\n\r\nconst CartDropdown = ({ cartItems, history, dispatch, match }) => (\r\n  <div className=\"cart-dropdown\">\r\n    <div className=\"cart-items\">\r\n      {cartItems.length ? (\r\n        cartItems.map((item) => {\r\n          return <CartItem key={item.id} item={item} />;\r\n        })\r\n      ) : (\r\n        <span className=\"empty-cart\">Your Cart Is Empty !</span>\r\n      )}\r\n    </div>\r\n    <CustomButton\r\n      onClick={() => {\r\n        history.push(`${match.url}checkout`);\r\n        dispatch(toggleCartHidden());\r\n      }}\r\n    >\r\n      GO TO CHECKOUT\r\n    </CustomButton>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}