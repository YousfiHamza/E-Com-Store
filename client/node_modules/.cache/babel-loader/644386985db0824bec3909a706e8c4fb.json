{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\tuto\\\\E-Com Store\\\\src\\\\views\\\\checkoutPage\\\\checkoutPage.component.jsx\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { selectCartItems, selectCartTotal } from \"../../redux/cart/cart.selectors\";\nimport { CheckoutPageContainer, CheckoutHeaderContainer, HeaderBlockContainer, TotalContainer, TestWarningContainer } from \"./checkoutPage.styles\";\nimport Parallax from \"../../components/parallax/parallax.component\";\n\nconst CheckoutPage = ({\n  cartItems,\n  cartTotal,\n  currentUser,\n  location\n}) => {\n  // the user must have at least one item in his cart and he must be logged in\n  if (currentUser && cartTotal) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Parallax, {\n      filter: true,\n      image: \"checkOut\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CheckoutPageContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CheckoutHeaderContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HeaderBlockContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, \" Product \")), /*#__PURE__*/React.createElement(HeaderBlockContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, \" Description \")), /*#__PURE__*/React.createElement(HeaderBlockContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \" Quantity \")), /*#__PURE__*/React.createElement(HeaderBlockContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \" Price \")), /*#__PURE__*/React.createElement(HeaderBlockContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \" Remove \"))), cartItems.map(item => /*#__PURE__*/React.createElement(CheckoutItem, {\n      key: item.id,\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(TotalContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Total : $ \", cartTotal)), /*#__PURE__*/React.createElement(TestWarningContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"*Please use the following test credit card for payments*\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), \"Card Number : 4242 4242 4242 4242 \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 47\n      }\n    }), \" Exp : 12/34 \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 66\n      }\n    }), \" CVV : 567\"), /*#__PURE__*/React.createElement(StripeCheckoutButton, {\n      price: cartTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })));\n  } // if the cart is empty ... no need to stay on the checkuot page\n  else if (currentUser) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"./\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }\n      });\n    } // the following code is for us to get back to our checkout page after logging in\n\n\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/sign-in\",\n      state: {\n        prevPath: location.pathname\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotal: selectCartTotal,\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/tuto/E-Com Store/src/views/checkoutPage/checkoutPage.component.jsx"],"names":["React","Fragment","connect","Redirect","createStructuredSelector","CheckoutItem","StripeCheckoutButton","selectCurrentUser","selectCartItems","selectCartTotal","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","TestWarningContainer","Parallax","CheckoutPage","cartItems","cartTotal","currentUser","location","map","item","id","pathname","state","prevPath","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\r\n\r\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\r\n\r\nimport {\r\n  selectCartItems,\r\n  selectCartTotal,\r\n} from \"../../redux/cart/cart.selectors\";\r\n\r\nimport {\r\n  CheckoutPageContainer,\r\n  CheckoutHeaderContainer,\r\n  HeaderBlockContainer,\r\n  TotalContainer,\r\n  TestWarningContainer,\r\n} from \"./checkoutPage.styles\";\r\n\r\nimport Parallax from \"../../components/parallax/parallax.component\";\r\n\r\nconst CheckoutPage = ({ cartItems, cartTotal, currentUser, location }) => {\r\n  // the user must have at least one item in his cart and he must be logged in\r\n  if (currentUser && cartTotal) {\r\n    return (\r\n      <Fragment>\r\n        <Parallax filter image=\"checkOut\" />\r\n        <CheckoutPageContainer>\r\n          <CheckoutHeaderContainer>\r\n            <HeaderBlockContainer>\r\n              <span> Product </span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n              <span> Description </span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n              <span> Quantity </span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n              <span> Price </span>\r\n            </HeaderBlockContainer>\r\n            <HeaderBlockContainer>\r\n              <span> Remove </span>\r\n            </HeaderBlockContainer>\r\n          </CheckoutHeaderContainer>\r\n          {cartItems.map((item) => (\r\n            <CheckoutItem key={item.id} item={item} />\r\n          ))}\r\n          <TotalContainer>\r\n            <span>Total : $ {cartTotal}</span>\r\n          </TotalContainer>\r\n          <TestWarningContainer>\r\n            *Please use the following test credit card for payments*\r\n            <br />\r\n            <br />\r\n            Card Number : 4242 4242 4242 4242 <br /> Exp : 12/34 <br /> CVV :\r\n            567\r\n          </TestWarningContainer>\r\n          <StripeCheckoutButton price={cartTotal} />\r\n        </CheckoutPageContainer>\r\n      </Fragment>\r\n    );\r\n  }\r\n  // if the cart is empty ... no need to stay on the checkuot page\r\n  else if (currentUser) {\r\n    return <Redirect to=\"./\" />;\r\n  }\r\n  // the following code is for us to get back to our checkout page after logging in\r\n  return (\r\n    <Redirect\r\n      to={{ pathname: \"/sign-in\", state: { prevPath: location.pathname } }}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n  cartTotal: selectCartTotal,\r\n  currentUser: selectCurrentUser,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);\r\n"]},"metadata":{},"sourceType":"module"}