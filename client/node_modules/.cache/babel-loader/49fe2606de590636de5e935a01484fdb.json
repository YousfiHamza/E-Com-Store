{"ast":null,"code":"import ShopActionTypes from\"./shop.types\";import{firestore,convertCollectionsSnapshotToMap}from\"../../firebase/firebase.utils\";export var fetchCollectionsStart=function fetchCollectionsStart(){return{type:ShopActionTypes.FETCH_COLLECTIONS_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collectionMap){return{type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,payload:collectionMap};};export var fetchCollectionsFailure=function fetchCollectionsFailure(error){return{type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,payload:error};};// now its possible due to the redux-thunk middeelware to dispatch actions inside actions (y) because of the dispatch parametre that it provides .\nexport var fetchCollectionsStartAsync=function fetchCollectionsStartAsync(){return function(dispatch){var collectionRef=firestore.collection(\"collections\");dispatch(fetchCollectionsStart());collectionRef.get().then(function(snapshot){var collectionsMap=convertCollectionsSnapshotToMap(snapshot);dispatch(fetchCollectionsSuccess(collectionsMap));}).catch(function(error){return dispatch(fetchCollectionsFailure(error.message));});};};","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/tuto/E-Com Store/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","error","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","catch","message"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CAEA,OACEC,SADF,CAEEC,+BAFF,KAGO,+BAHP,CAKA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAO,CAC1CC,IAAI,CAAEJ,eAAe,CAACK,uBADoB,CAAP,EAA9B,CAIP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,aAAD,QAAoB,CACzDH,IAAI,CAAEJ,eAAe,CAACQ,yBADmC,CAEzDC,OAAO,CAAEF,aAFgD,CAApB,EAAhC,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,KAAD,QAAY,CACjDP,IAAI,CAAEJ,eAAe,CAACY,yBAD2B,CAEjDH,OAAO,CAAEE,KAFwC,CAAZ,EAAhC,CAKP;AACA,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CAC9C,MAAO,UAACC,QAAD,CAAc,CACnB,GAAMC,CAAAA,aAAa,CAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CACAF,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CAEAY,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClB,GAAMC,CAAAA,cAAc,CAAGlB,+BAA+B,CAACiB,QAAD,CAAtD,CACAL,QAAQ,CAACR,uBAAuB,CAACc,cAAD,CAAxB,CAAR,CACD,CALH,EAMGC,KANH,CAMS,SAACV,KAAD,QAAWG,CAAAA,QAAQ,CAACJ,uBAAuB,CAACC,KAAK,CAACW,OAAP,CAAxB,CAAnB,EANT,EAOD,CAXD,CAYD,CAbM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionMap) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (error) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\n// now its possible due to the redux-thunk middeelware to dispatch actions inside actions (y) because of the dispatch parametre that it provides .\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n      })\r\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}