{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\"; // firebase init with the custom config //\n\nconst config = {\n  apiKey: \"AIzaSyD8qco9qpM7V6Q-CHM1QzfqgvKcWQZMfAQ\",\n  authDomain: \"ecom-store-782b3.firebaseapp.com\",\n  databaseURL: \"https://ecom-store-782b3.firebaseio.com\",\n  projectId: \"ecom-store-782b3\",\n  storageBucket: \"ecom-store-782b3.appspot.com\",\n  messagingSenderId: \"426185988615\",\n  appId: \"1:426185988615:web:95eda80764bf512c92a8a2\",\n  measurementId: \"G-3TZC7JFEV5\"\n};\nfirebase.initializeApp(config); // usefull fct to interract with the db //\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating the user . \", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndItems = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef); // batch in order for us to make all the instructions inside ( if any of them fail, all of them should fail ) case of a internet disconnection\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\n\nconst convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      id: doc.id,\n      title,\n      items,\n      routeName: encodeURI(title.toLowerCase()) // convert a string to a link readable and without special caracter so it can be accepted by the browser\n\n    };\n  });\n  console.log(transformedCollection);\n}; // Auth methods init. section //\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst GoogleProvider = new firebase.auth.GoogleAuthProvider();\nconst FacebookProvider = new firebase.auth.FacebookAuthProvider();\nGoogleProvider.setCustomParameters({\n  propmt: \"select_account\"\n});\nFacebookProvider.setCustomParameters({\n  propmt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(GoogleProvider);\nexport const signInWithFaceBook = () => auth.signInWithPopup(FacebookProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/tuto/E-Com Store/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndItems","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","id","routeName","encodeURI","toLowerCase","auth","GoogleProvider","GoogleAuthProvider","FacebookProvider","FacebookAuthProvider","setCustomParameters","propmt","signInWithGoogle","signInWithPopup","signInWithFaceBook"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// firebase init with the custom config //\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyD8qco9qpM7V6Q-CHM1QzfqgvKcWQZMfAQ\",\r\n  authDomain: \"ecom-store-782b3.firebaseapp.com\",\r\n  databaseURL: \"https://ecom-store-782b3.firebaseio.com\",\r\n  projectId: \"ecom-store-782b3\",\r\n  storageBucket: \"ecom-store-782b3.appspot.com\",\r\n  messagingSenderId: \"426185988615\",\r\n  appId: \"1:426185988615:web:95eda80764bf512c92a8a2\",\r\n  measurementId: \"G-3TZC7JFEV5\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\n// usefull fct to interract with the db //\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating the user . \", error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nexport const addCollectionAndItems = async (collectionKey, objectsToAdd) => {\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  console.log(collectionRef);\r\n\r\n  // batch in order for us to make all the instructions inside ( if any of them fail, all of them should fail ) case of a internet disconnection\r\n  const batch = firestore.batch();\r\n\r\n  objectsToAdd.forEach((obj) => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, obj);\r\n  });\r\n\r\n  return await batch.commit();\r\n};\r\n\r\nconst convertCollectionsSnapshotToMap = (collections) => {\r\n  const transformedCollection = collections.docs.map((doc) => {\r\n    const { title, items } = doc.data();\r\n    return {\r\n      id: doc.id,\r\n      title,\r\n      items,\r\n      routeName: encodeURI(title.toLowerCase()), // convert a string to a link readable and without special caracter so it can be accepted by the browser\r\n    };\r\n  });\r\n  console.log(transformedCollection);\r\n};\r\n\r\n// Auth methods init. section //\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst GoogleProvider = new firebase.auth.GoogleAuthProvider();\r\nconst FacebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nGoogleProvider.setCustomParameters({ propmt: \"select_account\" });\r\nFacebookProvider.setCustomParameters({ propmt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(GoogleProvider);\r\nexport const signInWithFaceBook = () => auth.signInWithPopup(FacebookProvider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}